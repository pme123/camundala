openapi: 3.0.3
info:
  title: Twitter Process API
  version: '1.0'
  description: |2+

    **This is for Postman - to have example requests. Be aware the Output is not provided!**



    Created at 27/06/2022, 07:08

    ****


    The self-contained process solution contains

    * The process model as BPMN (auto-deployed during startup)
    * Glue code for the service task
    * REST endpoint that then starts a process instance
    * Test case

    Requirements:

    * Java >= 8
    * Maven

    ## How to run

    * Download/clone the code in this folder.
    * You need to set your Camunda cloud client connection details in the file `application.properties`. Simply replace the existing sample values.
    * Run the application:

    ```
    mvn package exec:java
    ```

    ```
    curl -i -X PUT http://localhost:8323/tweet \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/json' \
      -d '{
      "tweet":"What the f***!",
      "author":"Sergey",
      "boss":"Putin"
    }'
    ```

    * You should see something like this:



servers:
- url: http://localhost:8887/engine-rest
  description: Local Developer Server
paths:
  /process-definition/key/TwitterDemoP/start:
    post:
      tags:
      - twitterDemoProcess
      summary: 'twitterDemoProcess: StartProcess'
      description: This runs the Twitter Approvement Process.
      operationId: postProcess-definitionKeyTwitterdemopStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              twitterDemoProcess:
                value:
                  variables:
                    tweet:
                      value: Hello Tweet
                      type: String
                    author:
                      value: pme123
                      type: String
                    boss:
                      value: Great Master
                      type: String
                  businessKey: twitterDemoProcess
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:reviewTweetApprovedUT--:
    post:
      tags:
      - twitterDemoProcess
      summary: 'reviewTweetApprovedUT: GetActiveTask'
      description: '-'
      operationId: postTask--remove:reviewtweetapprovedut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              reviewTweetApprovedUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:reviewTweetApprovedUT--:
    get:
      tags:
      - twitterDemoProcess
      summary: 'reviewTweetApprovedUT: GetTaskFormVariables'
      description: '-'
      operationId: getTaskTaskidForm-variables--remove:reviewtweetapprovedut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: tweet,author,boss
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:reviewTweetApprovedUT--:
    post:
      tags:
      - twitterDemoProcess
      summary: 'reviewTweetApprovedUT: CompleteTask'
      description: '-'
      operationId: postTaskTaskidComplete--remove:reviewtweetapprovedut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              Tweet accepted:
                value:
                  variables:
                    tweet:
                      value: Hello Tweet
                      type: String
                    author:
                      value: pme123
                      type: String
                    boss:
                      value: Great Master
                      type: String
                    approved:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
              Tweet rejected:
                value:
                  variables:
                    tweet:
                      value: Hello Tweet
                      type: String
                    author:
                      value: pme123
                      type: String
                    boss:
                      value: Great Master
                      type: String
                    approved:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
components:
  schemas:
    CBoolean:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: boolean
        type:
          type: string
    CDouble:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: number
          format: double
        type:
          type: string
    CEnum:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CFile:
      required:
      - value
      - valueInfo
      - type
      type: object
      properties:
        value:
          type: string
          description: The File's content as Base64 encoded String.
        valueInfo:
          $ref: '#/components/schemas/CFileValueInfo'
        type:
          type: string
    CFileValueInfo:
      required:
      - filename
      type: object
      properties:
        filename:
          type: string
        mimetype:
          type: string
    CInteger:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
        type:
          type: string
    CJson:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CLong:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
          format: int64
        type:
          type: string
    CNull:
      type: object
    CString:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CamundaVariable:
      oneOf:
      - $ref: '#/components/schemas/CBoolean'
      - $ref: '#/components/schemas/CDouble'
      - $ref: '#/components/schemas/CEnum'
      - $ref: '#/components/schemas/CFile'
      - $ref: '#/components/schemas/CInteger'
      - $ref: '#/components/schemas/CJson'
      - $ref: '#/components/schemas/CLong'
      - $ref: '#/components/schemas/CNull'
      - $ref: '#/components/schemas/CString'
    CompleteTaskIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables and the
            Result Status is 204.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
    GetActiveTaskIn:
      required:
      - processInstanceId
      - active
      type: object
      properties:
        processInstanceId:
          type: string
          description: |2

            The id of the process - you want to get the active tasks.
            > This is the result id of the `StartProcessOut`

            Add in the _Tests_ panel of _Postman_:
            ```
            let result = pm.response.json();
            pm.collectionVariables.set("processInstanceId", result.id)
            ```
        active:
          type: boolean
          description: We are only interested in the active Task(s)
      description: A JSON object with the following properties
    Map_CamundaVariable:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CamundaVariable'
    StartProcessIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        businessKey:
          type: string
          description: The business key of the process instance.
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
