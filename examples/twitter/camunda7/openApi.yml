openapi: 3.0.3
info:
  title: Twitter Process API
  version: '1.0'
  description: "\n\nCreated at 03/04/2022, 16:06\n\nGenerated Open API:\n\n- **openApi.yml**:\
    \ Documentation of the Processes (this Documentation\U0001f60a).\n- **postmanOpenApi.yml**:\
    \ Open Api that you can import to Postman!\n  Be aware that this needs some adjustments.\n\
    \n>WARNING: This is an experimental way and not approved.\n\n****\n\nI did the\
    \ following Adjustments:\n* Changed it to _Scala_ to simplify my example.\n* Added\
    \ extensions to the Camundala DSL.\n* Added the BPMN implementation in Camundala\
    \ DSL.\n\nThere are 2 application here:\n1. **TwitterProcessRunnerApp**\n   \n\
    \   Runs the _Camundala_ Dev Process (from specification BPMN to implementation\
    \ BPMN).\n\n2. **TwitterServletProcessApplication**\n\n   Runs the Camunda Engine\
    \ (Spring Boot) with the generated BPMN. \n\n## How to run it\n> **this needs\
    \ [sbt](https://www.scala-sbt.org)**\n\n`sbt exampleTwitter/run`\n\nNow you can\
    \ select 1 or 2:\n```\nMultiple main classes detected. Select one to run:\n [1]\
    \ camundala.examples.twitter.TwitterServletProcessApplication\n [2] camundala.examples.twitter.bpmn.TwitterProcessRunnerApp\n\
    \ ```\nThis is the [original README](https://github.com/camunda/camunda-bpm-examples/tree/master/spring-boot-starter/example-twitter)\n\
    \nI bundled it here! Just run `InvoiceServletProcessApplication`.\n\nThis based\
    \ on this Project: https://github.com/pme123/spring-boot-datakurre-plugins\n\n\
    \n\n"
paths:
  /Process/TwitterDemoP:
    head:
      tags:
      - TwitterDemoP
      summary: 'Process: TwitterDemoP'
      description: |
        This runs the Twitter Approvement Process.
        <details>
        <summary><b>Used in the 4 Process(es)</b></summary>
        <p>


        - _camundala_
           - [TwitterDemoProcess](https://MYDOCHOST/camundala/OpenApi.html#tag/TwitterDemoProcess)


        - _camundala-dsl_
           - [TwitterDemoProcess](https://MYDOCHOST/camundala-dsl/OpenApi.html#tag/TwitterDemoProcess)


        - _spring-boot-datakurre-plugins_
           - [TwitterDemoProcess](https://MYDOCHOST/spring-boot-datakurre-plugins/OpenApi.html#tag/TwitterDemoProcess)
           - [TwitterDemoProcess](https://MYDOCHOST/spring-boot-datakurre-plugins/OpenApi.html#tag/TwitterDemoProcess)


        - _zio-camunda-spring-boot_
           - [TwitterDemoProcess](https://MYDOCHOST/zio-camunda-spring-boot/OpenApi.html#tag/TwitterDemoProcess)




        </p>
        </details>
      operationId: 'Process: TwitterDemoP'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTweet'
            examples:
              standard:
                value:
                  email: me@myself.com
                  content: Test Tweet
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewTweet'
              examples:
                standard:
                  value:
                    approved: true
  /UserTask/ReviewTweetUT:
    head:
      tags:
      - TwitterDemoP
      summary: 'UserTask: ReviewTweetUT'
      description: ''
      operationId: 'UserTask: ReviewTweetUT'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoInput'
            examples:
              standard:
                value: {}
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewTweet'
              examples:
                standard:
                  value:
                    approved: true
                Tweet accepted:
                  value:
                    approved: true
                Tweet rejected:
                  value:
                    approved: false
components:
  schemas:
    CreateTweet:
      required:
      - email
      - content
      type: object
      properties:
        email:
          type: string
        content:
          type: string
      description: |
        Every employee may create a Tweet.

        - email:   The email address of the creator.
        - content: The content of the Tweet.
    NoInput:
      type: object
    ReviewTweet:
      required:
      - approved
      type: object
      properties:
        approved:
          type: boolean
          description: If true, the Boss accepted the Tweet
      description: Every Tweet has to be accepted by the Boss.
