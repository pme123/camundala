openapi: 3.0.3
info:
  title: Invoice Example Process API
  version: '1.0'
  description: "\n**This is for Postman - to have example requests. Be aware the Output\
    \ is not provided!**\n\n\n\nCreated at 13/10/2022, 16:27\n\n**[Check Project on\
    \ Cawemo](https://cawemo.com/folders/a76e4b8e-8631-4d20-a8eb-258b000ff88a--camundala)**\n\
    \n> This is the invoice demo application which is shipped with the full distributions\
    \ in Camunda 7.\n\nSee the original [README](https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice).\n\
    \nI bundled it here! Just run `InvoiceProcessApplication`.\n\n> This requires\
    \ that **Camunda 8 Standalone** is running -> _https://github.com/camunda/camunda-platform.git_\n\
    \nThis based on this Project: https://github.com/pme123/spring-boot-datakurre-plugins\n\
    \n## Migration BPMN/DMN to Camunda 8\n### Pain Points\n- The Migration Plugin\
    \ did not work for DMNs - I had to adjust the XML manually.\n- Forms can not be\
    \ linked (copy-paste Json of form) (Standalone version).\n- Camunda Property Infos\
    \ Plugin does not work.\n- FEEL is missing _**not** myProperty_ - you need to\
    \ do it _myProperty = false_.\n- CallActivities Input-Mapping were not migrated.\n\
    \n### What did not work\n- Forms in the Start Event\n  - Workaround: Added another\
    \ UserTask \n  - but with this, it is impossible to have Camunda Processes running\
    \ by itself (no other application must be deployed)\n- No files\n  - Workaround:\
    \ only the reference to the file is in the process.\n- Dynamic content in Form\
    \ Texts (FEEL)\n- Datastore / Data object reference have no graphic anymore\n\n\
    ### Cool stuff\n- Some code completion in FEEL expressions\n- Links in the Modeller\
    \ to the documentation\n\n## Migrating Camundala to Camunda 8\nThe work to migrate\
    \ the Example concerning:\n- API Documentation\n- Test Simulation\n- Validation\n\
    \n### API Documentation\nNothing to do here - the API stays the same! \U0001f389\
    \U0001f389\U0001f389\n### Test Simulation\n\n\n\n# Changelog\n\n<details>\n<summary>CHANGELOG.md</summary>\n\
    <p>\n\n\nAll notable changes to this project will be documented in this file.\n\
    \n* Types of Changes (L3):\n  * Added: new features\n  * Changed: changes in existing\
    \ functionality\n  * Deprecated: soon-to-be-removed features\n  * Removed: now\
    \ removed features\n  * Fixed: any bug fixes\n  * Security: in case of vulnerabilities\n\
    \n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n\
    and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\
    \n### Unreleased\nInitial Version\n\n</p>\n</details>\n\n\n"
servers:
- url: http://localhost:8034/engine-rest
  description: Local Developer Server
paths:
  /process-definition/key/InvoiceReceiptP/start:
    post:
      tags:
      - Invoice Receipt
      summary: 'Invoice Receipt: StartProcess'
      description: |2

        This starts the Invoice Receipt Process.

        <iframe src="https://cawemo.com/embed/e289c19a-8a57-4467-8583-de72a5e57488" style="width:100%;height:500px;border:1px solid #ccc" allowfullscreen></iframe>


        See API Doc: [Invoice Receipt](No URL defined for invoice-example/OpenApi.html#operation/Process:%20Invoice%20Receipt)
      operationId: postProcess-definitionKeyInvoicereceiptpStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              Invoice Receipt:
                value:
                  variables:
                    creditor:
                      value: Great Pizza for Everyone Inc.
                      type: String
                    invoiceNumber:
                      value: I-12345
                      type: String
                    amount:
                      value: 300.0
                      type: Double
                    invoiceDocument:
                      value: |-
                        {
                          "fileName" : "invoice.pdf",
                          "ref" : "processes/invoice.pdf",
                          "mimeType" : "application/pdf"
                        }
                      type: Json
                    invoiceCategory:
                      value: Travel Expenses
                      type: String
                  businessKey: Invoice Receipt
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /decision-definition/key/{key}/--REMOVE:invoice-assign-approver--/evaluate:
    post:
      tags:
      - Invoice Receipt
      summary: 'InvoiceAssignApproverDMN: EvaluateDecision'
      description: |2


        Decision Table on who must approve the Invoice.

        <iframe src="https://cawemo.com/embed/155ba236-d5d1-42f7-8b56-3e90e0bb98d4" style="width:100%;height:500px;border:1px solid #ccc" allowfullscreen></iframe>


        Decision DMN:
        - _decisionDefinitionKey_: `invoice-assign-approver`,


        See API Doc: [InvoiceAssignApproverDMN](No URL defined for invoice-example/OpenApi.html#operation/DecisionDmn:%20InvoiceAssignApproverDMN)
      operationId: postDecision-definitionKeyKey--remove:invoice-assign-approver--Evaluate
      parameters:
      - name: key
        in: path
        description: The Process- or Decision-DefinitionKey of the Process or Decision
        required: true
        schema:
          type: string
          default: invoice-assign-approver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateDecisionIn'
            examples:
              InvoiceAssignApproverDMN:
                value:
                  variables:
                    amount:
                      value: 30.0
                      type: Double
                    invoiceCategory:
                      value: Software License Costs
                      type: String
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:ApproveInvoiceUT--:
    post:
      tags:
      - Invoice Receipt
      summary: 'ApproveInvoiceUT: GetActiveTask'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: postTask--remove:approveinvoiceut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              ApproveInvoiceUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:ApproveInvoiceUT--:
    get:
      tags:
      - Invoice Receipt
      summary: 'ApproveInvoiceUT: GetTaskFormVariables'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: getTaskTaskidForm-variables--remove:approveinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:ApproveInvoiceUT--:
    post:
      tags:
      - Invoice Receipt
      summary: 'ApproveInvoiceUT: CompleteTask'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: postTaskTaskidComplete--remove:approveinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              ApproveInvoiceUT:
                value:
                  variables:
                    approved:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice approved:
                value:
                  variables:
                    approved:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice NOT approved:
                value:
                  variables:
                    approved:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:PrepareBankTransferUT--:
    post:
      tags:
      - Invoice Receipt
      summary: 'PrepareBankTransferUT: GetActiveTask'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: postTask--remove:preparebanktransferut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              PrepareBankTransferUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:PrepareBankTransferUT--:
    get:
      tags:
      - Invoice Receipt
      summary: 'PrepareBankTransferUT: GetTaskFormVariables'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: getTaskTaskidForm-variables--remove:preparebanktransferut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:PrepareBankTransferUT--:
    post:
      tags:
      - Invoice Receipt
      summary: 'PrepareBankTransferUT: CompleteTask'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: postTaskTaskidComplete--remove:preparebanktransferut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              PrepareBankTransferUT:
                value:
                  variables: {}
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /process-definition/key/ReviewInvoiceP/start:
    post:
      tags:
      - Review Invoice
      summary: 'Review Invoice: StartProcess'
      description: |2

        This starts the Review Invoice Process.

        <iframe src="https://cawemo.com/embed/cc9f978a-e98a-4b01-991d-36d682574cda" style="width:100%;height:500px;border:1px solid #ccc" allowfullscreen></iframe>


        See API Doc: [Review Invoice](No URL defined for invoice-example/OpenApi.html#operation/Process:%20Review%20Invoice)
      operationId: postProcess-definitionKeyReviewinvoicepStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              Review Invoice:
                value:
                  variables:
                    creditor:
                      value: Great Pizza for Everyone Inc.
                      type: String
                    invoiceNumber:
                      value: I-12345
                      type: String
                    amount:
                      value: 300.0
                      type: Double
                    invoiceDocument:
                      value: |-
                        {
                          "fileName" : "invoice.pdf",
                          "ref" : "processes/invoice.pdf",
                          "mimeType" : "application/pdf"
                        }
                      type: Json
                    invoiceCategory:
                      value: Travel Expenses
                      type: String
                  businessKey: Review Invoice
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:AssignReviewerUT--:
    post:
      tags:
      - Review Invoice
      summary: 'AssignReviewerUT: GetActiveTask'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: postTask--remove:assignreviewerut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              AssignReviewerUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:AssignReviewerUT--:
    get:
      tags:
      - Review Invoice
      summary: 'AssignReviewerUT: GetTaskFormVariables'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: getTaskTaskidForm-variables--remove:assignreviewerut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:AssignReviewerUT--:
    post:
      tags:
      - Review Invoice
      summary: 'AssignReviewerUT: CompleteTask'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: postTaskTaskidComplete--remove:assignreviewerut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              AssignReviewerUT:
                value:
                  variables:
                    reviewer:
                      value: John
                      type: String
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:ReviewInvoiceUT--:
    post:
      tags:
      - Review Invoice
      summary: 'ReviewInvoiceUT: GetActiveTask'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: postTask--remove:reviewinvoiceut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              ReviewInvoiceUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:ReviewInvoiceUT--:
    get:
      tags:
      - Review Invoice
      summary: 'ReviewInvoiceUT: GetTaskFormVariables'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: getTaskTaskidForm-variables--remove:reviewinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:ReviewInvoiceUT--:
    post:
      tags:
      - Review Invoice
      summary: 'ReviewInvoiceUT: CompleteTask'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](No URL defined for invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: postTaskTaskidComplete--remove:reviewinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              ReviewInvoiceUT:
                value:
                  variables:
                    clarified:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice clarified:
                value:
                  variables:
                    clarified:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice NOT clarified:
                value:
                  variables:
                    clarified:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
components:
  schemas:
    CBoolean:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: boolean
        type:
          type: string
    CDouble:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: number
          format: double
        type:
          type: string
    CFile:
      required:
      - value
      - valueInfo
      - type
      type: object
      properties:
        value:
          type: string
          description: The File's content as Base64 encoded String.
        valueInfo:
          $ref: '#/components/schemas/CFileValueInfo'
        type:
          type: string
    CFileValueInfo:
      required:
      - filename
      type: object
      properties:
        filename:
          type: string
        mimetype:
          type: string
    CInteger:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
        type:
          type: string
    CJson:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CLong:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
          format: int64
        type:
          type: string
    CNull:
      type: object
    CString:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CamundaVariable:
      oneOf:
      - $ref: '#/components/schemas/CBoolean'
      - $ref: '#/components/schemas/CDouble'
      - $ref: '#/components/schemas/CFile'
      - $ref: '#/components/schemas/CInteger'
      - $ref: '#/components/schemas/CJson'
      - $ref: '#/components/schemas/CLong'
      - $ref: '#/components/schemas/CNull'
      - $ref: '#/components/schemas/CString'
    CompleteTaskIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables and the
            Result Status is 204.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
    EvaluateDecisionIn:
      required:
      - variables
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
      description: 'A JSON object with the following properties:'
    GetActiveTaskIn:
      required:
      - processInstanceId
      - active
      type: object
      properties:
        processInstanceId:
          type: string
          description: |2

            The id of the process - you want to get the active tasks.
            > This is the result id of the `StartProcessOut`

            Add in the _Tests_ panel of _Postman_:
            ```
            let result = pm.response.json();
            pm.collectionVariables.set("processInstanceId", result.id)
            ```
        active:
          type: boolean
          description: We are only interested in the active Task(s)
      description: A JSON object with the following properties
    Map_CamundaVariable:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CamundaVariable'
    StartProcessIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        businessKey:
          type: string
          description: The business key of the process instance.
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
