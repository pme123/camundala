openapi: 3.0.3
info:
  title: Invoice Example Process API
  version: '1.0'
  summary: "\n**This is for Postman - to have example requests. Be aware the Output\
    \ is not provided!**\n\n\n\nCreated at 01/09/2023, 13:07\n\n**See the [Camundala\
    \ Documentation](https://pme123.github.io/camundala/)\n\n> This is the invoice\
    \ demo application which is shipped with the full distributions.\n\nSee the original\
    \ [README](https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice).\n\
    \nI bundled it here! Just run `InvoiceServletProcessApplication`.\n\nThis based\
    \ on this Project: https://github.com/pme123/spring-boot-datakurre-plugins\n\n\
    \n<details>\n<summary><b><i>CHANGELOG.md</i></b></summary>\n<p>\n\n\nAll notable\
    \ changes to this project will be documented in this file.\n\n* Types of Changes\
    \ (L3):\n  * Added: new features\n  * Changed: changes in existing functionality\n\
    \  * Deprecated: soon-to-be-removed features\n  * Removed: now removed features\n\
    \  * Fixed: any bug fixes\n  * Security: in case of vulnerabilities\n\n\nThe format\
    \ is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this\
    \ project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\
    \n### Unreleased\nInitial Version\n\n</p>\n</details>\n\n\n<p/>\n<details>\n<summary>\n\
    <b><i>Supported General Variables</i></b>\n</summary>\n\n<p>\n\n### Processes\n\
    \n**mockedSubprocesses**:\n\nMock the SubProcesses with their default Mocks.\n\
    This is a list of the _SubProcesses processNames_ you want to mock.\nDepending\
    \ on your implementation it is also possible to use a _comma separated_ String,\n\
    like `\"mySubProcess,myOtherSubProcess\"`\n\n\n- DSL:\n```scala\nprocess(..)\n\
    \  .mockSubProcesses(\"mySubProcess1\", \"mySubProcess2\") // creates a list with\
    \ SubProcessess\n  .mockSubProcess(\"myOtherSubProcess\") // adds a SubProcess\n\
    ```\n\n- Json\n```json\n...\n\"mockedSubprocesses\": [\"mySubProcess\", \"myOtherSubProcess\"\
    ],\n...\n```\n\n### Processes and ServiceProcesses\n**outputVariables**:\n\nYou\
    \ can filter the Output with a list of variable names you are interested in.\n\
    Depending on your implementation it is also possible to use a _comma separated_\
    \ String,\nlike `\"name,firstName\"`\n\n\n- DSL:\n```scala\nprocess(..) // or\
    \ serviceProcess(..)\n  .withOutputVariables(\"name\", \"firstName\") // creates\
    \ a list with outputVariables\n  .withOutputVariable(\"name\", \"firstName\")\
    \ // adds a outputVariable\n```\n\n- Json\n```json\n...\n\"outputVariables\":\
    \ [\"name\", \"firstName\"],\n...\n```\n\n\n**outputMock**:\n\nMock the Process\
    \ or Service (`Out`)\n - You find an example in every _Process_ and _ServiceProcess_.\n\
    \n\n- DSL:\n```scala\nprocess(..) // or serviceProcess(..)\n  .mockWith(outputMock)\n\
    ```\n\n- Json\n```json\n...\n\"outputMock\": {..},\n...\n```\n\n\n**servicesMocked**:\n\
    \nMock the ServiceProcesses (Workers only) with their default Mock:\n\n- DSL:\n\
    ```scala\nprocess(..) // or serviceProcess(..)\n  .mockServices\n```\n\n- Json\n\
    ```json\n...\n\"servicesMocked\": true,\n...\n```\n\n\n**impersonateUserId**:\n\
    \nUser-ID of a User that should be taken to authenticate to the services.\nThis\
    \ must be supported by your implementation. *Be caution: this may be a security\
    \ issue!*.\nIt is helpful if you have Tokens that expire, but long running Processes.\n\
    \n- DSL:\n```scala\nprocess(..) // or serviceProcess(..)\n  .withImpersonateUserId(impersonateUserId)\n\
    ```\n\n- Json\n```json\n...\n\"impersonateUserId\": \"myUserName\",\n...\n```\n\
    \n\n**outputServiceMock**:\n\nMock the Inner-Service (`MockedServiceResponse[ServiceOut]`)\n\
    \ - You find an example in every _ServiceProcess_.\n\n\n- DSL:\n```scala\nserviceProcess(..)\n\
    \  .mockServiceWith(MockedServiceResponse\n     .success200(inOut.defaultServiceMock))\n\
    ```\n\n- Json\n```json\n...\n\"outputServiceMock\": {\n  \"respStatus\" : 200,\n\
    \  \"respBody\" : \"Example String Body\",\n  \"respHeaders\" : [\n  ]\n},\n...\n\
    ```\n\n\n**handledErrors**:\n\nA list of error codes that are handled (`BpmnError`)\n\
    Depending on your implementation it is also possible to use a _comma separated_\
    \ String,\nlike `\"validation-failed,404\"`\n\n\n- DSL:\n```scala\nserviceProcess(..)\n\
    \  .handleErrors(ErrorCodes.`validation-failed`, \"404\") // create a list of\
    \ handledErrors\n  .handleError(\"404\") // add a handledError\n```\n\n- Json\n\
    ```json\n...\n\"handledErrors\": [\"validation-failed\", \"404\"],\n...\n```\n\
    \n\n**regexHandledErrors**:\n\nYou can further filter Handled Errors with a list\
    \ of Regex expressions that the body error message must match.\nDepending on your\
    \ implementation it is also possible to use a _comma separated_ String,\nlike\
    \ `\"SQL exception,\"errorNr\":\"20000\"\"`\n\n\n- DSL:\n```scala\nserviceProcess(..)\n\
    \  .handleErrorWithRegex(\"SQL exception\")\n  .handleErrorWithRegex(\"\\\"errorNr\\\
    \":\\\"20000\\\"\")\n```\n\n- Json\n```json\n...\n\"regexHandledErrors\": [\"\
    SQL exception\", \"\"errorNr\":\"20000\"\"],\n...\n```\n\n</p>\n</details>\n<p/>\n\
    \        \n\n"
servers:
- url: http://localhost:8034/engine-rest
  description: Local Developer Server
paths:
  /process-definition/key/example-invoice-c7/start:
    post:
      tags:
      - example-invoice-c7
      summary: 'example-invoice-c7: StartProcess'
      description: |
        This starts the Invoice Receipt Process.

        See API Doc: [example-invoice-c7](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/Process:%20example-invoice-c7)
      operationId: postProcess-definitionKeyExample-invoice-c7Start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              example-invoice-c7:
                value:
                  variables:
                    creditor:
                      value: Great Pizza for Everyone Inc.
                      type: String
                    invoiceNumber:
                      value: I-12345
                      type: String
                    amount:
                      value: 300.0
                      type: Double
                    invoiceCategory:
                      value: Travel Expenses
                      type: String
                  businessKey: example-invoice-c7
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /decision-definition/key/{key}/--REMOVE:example-invoice-c7-assignApprover--/evaluate:
    post:
      tags:
      - example-invoice-c7
      summary: 'example-invoice-c7-assignApprover: EvaluateDecision'
      description: |2

        Decision Table on who must approve the Invoice.

        Decision DMN:
        - _decisionDefinitionKey_: `example-invoice-c7-assignApprover`,


        See API Doc: [example-invoice-c7-assignApprover](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/DecisionDmn:%20example-invoice-c7-assignApprover)
      operationId: postDecision-definitionKeyKey--remove:example-invoice-c7-assignapprover--Evaluate
      parameters:
      - name: key
        in: path
        description: The Process- or Decision-DefinitionKey of the Process or Decision
        required: true
        schema:
          type: string
          default: example-invoice-c7-assignApprover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateDecisionIn'
            examples:
              example-invoice-c7-assignApprover:
                value:
                  variables:
                    amount:
                      value: 30.0
                      type: Double
                    invoiceCategory:
                      value: Software License Costs
                      type: String
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:ApproveInvoiceUT--:
    post:
      tags:
      - example-invoice-c7
      summary: 'ApproveInvoiceUT: GetActiveTask'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: postTask--remove:approveinvoiceut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              ApproveInvoiceUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:ApproveInvoiceUT--:
    get:
      tags:
      - example-invoice-c7
      summary: 'ApproveInvoiceUT: GetTaskFormVariables'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: getTaskTaskidForm-variables--remove:approveinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:ApproveInvoiceUT--:
    post:
      tags:
      - example-invoice-c7
      summary: 'ApproveInvoiceUT: CompleteTask'
      description: |
        Approve the invoice (or not).

        See API Doc: [ApproveInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ApproveInvoiceUT)
      operationId: postTaskTaskidComplete--remove:approveinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              ApproveInvoiceUT:
                value:
                  variables:
                    approved:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice approved:
                value:
                  variables:
                    approved:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice NOT approved:
                value:
                  variables:
                    approved:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:PrepareBankTransferUT--:
    post:
      tags:
      - example-invoice-c7
      summary: 'PrepareBankTransferUT: GetActiveTask'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: postTask--remove:preparebanktransferut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              PrepareBankTransferUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:PrepareBankTransferUT--:
    get:
      tags:
      - example-invoice-c7
      summary: 'PrepareBankTransferUT: GetTaskFormVariables'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: getTaskTaskidForm-variables--remove:preparebanktransferut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:PrepareBankTransferUT--:
    post:
      tags:
      - example-invoice-c7
      summary: 'PrepareBankTransferUT: CompleteTask'
      description: |
        Prepare the bank transfer in the Financial Accounting System.

        See API Doc: [PrepareBankTransferUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20PrepareBankTransferUT)
      operationId: postTaskTaskidComplete--remove:preparebanktransferut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              PrepareBankTransferUT:
                value:
                  variables: {}
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /process-definition/key/example-invoice-c7-review/start:
    post:
      tags:
      - example-invoice-c7-review
      summary: 'example-invoice-c7-review: StartProcess'
      description: |
        This starts the Review Invoice Process.

        See API Doc: [example-invoice-c7-review](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/Process:%20example-invoice-c7-review)
      operationId: postProcess-definitionKeyExample-invoice-c7-reviewStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              example-invoice-c7-review:
                value:
                  variables:
                    creditor:
                      value: Great Pizza for Everyone Inc.
                      type: String
                    amount:
                      value: 300.0
                      type: Double
                    invoiceCategory:
                      value: Travel Expenses
                      type: String
                    invoiceNumber:
                      value: I-12345
                      type: String
                  businessKey: example-invoice-c7-review
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:AssignReviewerUT--:
    post:
      tags:
      - example-invoice-c7-review
      summary: 'AssignReviewerUT: GetActiveTask'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: postTask--remove:assignreviewerut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              AssignReviewerUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:AssignReviewerUT--:
    get:
      tags:
      - example-invoice-c7-review
      summary: 'AssignReviewerUT: GetTaskFormVariables'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: getTaskTaskidForm-variables--remove:assignreviewerut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:AssignReviewerUT--:
    post:
      tags:
      - example-invoice-c7-review
      summary: 'AssignReviewerUT: CompleteTask'
      description: |
        Select the Reviewer.

        See API Doc: [AssignReviewerUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20AssignReviewerUT)
      operationId: postTaskTaskidComplete--remove:assignreviewerut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              AssignReviewerUT:
                value:
                  variables:
                    reviewer:
                      value: John
                      type: String
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /task/--REMOVE:ReviewInvoiceUT--:
    post:
      tags:
      - example-invoice-c7-review
      summary: 'ReviewInvoiceUT: GetActiveTask'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: postTask--remove:reviewinvoiceut--
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveTaskIn'
            examples:
              ReviewInvoiceUT:
                value:
                  processInstanceId: '{{processInstanceId}}'
                  active: true
        required: true
      responses:
        '200':
          description: ''
  /task/{taskId}/form-variables/--REMOVE:ReviewInvoiceUT--:
    get:
      tags:
      - example-invoice-c7-review
      summary: 'ReviewInvoiceUT: GetTaskFormVariables'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: getTaskTaskidForm-variables--remove:reviewinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      - name: variableNames
        in: query
        description: |-
          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.
          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.
          If the query parameter contains non-existent variable names, the variable names are ignored.
        required: false
        schema:
          type: string
          default: name,example
      - name: deserializeValues
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
  /task/{taskId}/complete/--REMOVE:ReviewInvoiceUT--:
    post:
      tags:
      - example-invoice-c7-review
      summary: 'ReviewInvoiceUT: CompleteTask'
      description: |
        Review Invoice and approve.

        See API Doc: [ReviewInvoiceUT](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/UserTask:%20ReviewInvoiceUT)
      operationId: postTaskTaskidComplete--remove:reviewinvoiceut--
      parameters:
      - name: taskId
        in: path
        description: |
          The taskId of the Form.
          > This is the result id of the `GetActiveTask`

          Add in the _Tests_ panel of _Postman_:
          ```
          let result = pm.response.json()[0];
          pm.collectionVariables.set("taskId", result.id)
          ```
        required: true
        schema:
          type: string
          default: '{{taskId}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskIn'
            examples:
              ReviewInvoiceUT:
                value:
                  variables:
                    clarified:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice clarified:
                value:
                  variables:
                    clarified:
                      value: true
                      type: Boolean
                  withVariablesInReturn: true
              Invoice NOT clarified:
                value:
                  variables:
                    clarified:
                      value: false
                      type: Boolean
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
  /process-definition/key/ArchiveInvoiceService/start:
    post:
      tags:
      - Services
      summary: 'ArchiveInvoiceService: StartProcess'
      description: |
        Archives the Receipt.

        See API Doc: [ArchiveInvoiceService](https://webstor.ch/camundala/myCompany/invoice-example/OpenApi.html#operation/ServiceProcess:%20ArchiveInvoiceService)
      operationId: postProcess-definitionKeyArchiveinvoiceserviceStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartProcessIn'
            examples:
              ArchiveInvoiceService:
                value:
                  variables:
                    shouldFail:
                      value: true
                      type: Boolean
                  businessKey: ArchiveInvoiceService
                  withVariablesInReturn: true
        required: true
      responses:
        '200':
          description: ''
components:
  schemas:
    CBoolean:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: boolean
        type:
          type: string
    CDouble:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: number
          format: double
        type:
          type: string
    CFile:
      required:
      - value
      - valueInfo
      - type
      type: object
      properties:
        value:
          type: string
          description: The File's content as Base64 encoded String.
        valueInfo:
          $ref: '#/components/schemas/CFileValueInfo'
        type:
          type: string
    CFileValueInfo:
      required:
      - filename
      type: object
      properties:
        filename:
          type: string
        mimetype:
          type: string
    CInteger:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
          format: int32
        type:
          type: string
    CJson:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CLong:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: integer
          format: int64
        type:
          type: string
    CNull:
      type: object
    CString:
      required:
      - value
      - type
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    CamundaVariable:
      oneOf:
      - $ref: '#/components/schemas/CBoolean'
      - $ref: '#/components/schemas/CDouble'
      - $ref: '#/components/schemas/CFile'
      - $ref: '#/components/schemas/CInteger'
      - $ref: '#/components/schemas/CJson'
      - $ref: '#/components/schemas/CLong'
      - $ref: '#/components/schemas/CNull'
      - $ref: '#/components/schemas/CString'
    CompleteTaskIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables and the
            Result Status is 204.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
    EvaluateDecisionIn:
      required:
      - variables
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
      description: 'A JSON object with the following properties:'
    GetActiveTaskIn:
      required:
      - processInstanceId
      - active
      type: object
      properties:
        processInstanceId:
          type: string
          description: |2

            The id of the process - you want to get the active tasks.
            > This is the result id of the `StartProcessOut`

            Add in the _Tests_ panel of _Postman_:
            ```
            let result = pm.response.json();
            pm.collectionVariables.set("processInstanceId", result.id)
            ```
        active:
          type: boolean
          description: We are only interested in the active Task(s)
      description: Same as GetActiveJobIn.
    Map_CamundaVariable:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CamundaVariable'
    StartProcessIn:
      required:
      - variables
      - withVariablesInReturn
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/Map_CamundaVariable'
        businessKey:
          type: string
          description: The business key of the process instance.
        withVariablesInReturn:
          type: boolean
          description: Set to false will not return the Process Variables.
      description: 'A JSON object with the following properties: (at least an empty
        JSON object {} or an empty request body)'
